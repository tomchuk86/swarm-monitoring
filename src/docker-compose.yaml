services:
  postgres-db:
    image: pupok86/src-postgres-db
    ports:
      - "5432:5432"
    networks:
      - backend
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend

  session-service:
    image: pupok86/src-session-service
    environment:
      POSTGRES_HOST: postgres-db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users_db
    depends_on:
      - postgres-db
    ports:
      - "8081:8081"
    networks:
      - backend

  hotel-service:
    image: pupok86/src-hotel-service
    environment:
      POSTGRES_HOST: postgres-db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hotels_db
    depends_on:
      - postgres-db
    ports:
      - "8082:8082"
    networks:
      - backend

  payment-service:
    image: pupok86/src-payment-service
    environment:
      POSTGRES_HOST: postgres-db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: payments_db
    depends_on:
      - postgres-db
    ports:
      - "8084:8084"
    networks:
      - backend

  loyalty-service:
    image: pupok86/src-loyalty-service
    environment:
      POSTGRES_HOST: postgres-db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: balances_db
    depends_on:
      - postgres-db
    ports:
      - "8085:8085"
    networks:
      - backend

  report-service:
    image: pupok86/src-report-service
    environment:
      POSTGRES_HOST: postgres-db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: statistics_db
      RABBIT_MQ_HOST: rabbitmq
      RABBIT_MQ_PORT: 5672
      RABBIT_MQ_USER: guest
      RABBIT_MQ_PASSWORD: guest
      RABBIT_MQ_QUEUE_NAME: messagequeue
      RABBIT_MQ_EXCHANGE: messagequeue-exchange
    depends_on:
      - postgres-db
      - rabbitmq
    ports:
      - "8086:8086"
    networks:
      - backend

  booking-service:
    image: pupok86/src-booking-service
    environment:
      POSTGRES_HOST: postgres-db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: reservations_db
      RABBIT_MQ_HOST: rabbitmq
      RABBIT_MQ_PORT: 5672
      RABBIT_MQ_USER: guest
      RABBIT_MQ_PASSWORD: guest
      RABBIT_MQ_QUEUE_NAME: messagequeue
      RABBIT_MQ_EXCHANGE: messagequeue-exchange
      HOTEL_SERVICE_HOST: hotel-service
      HOTEL_SERVICE_PORT: 8082
      PAYMENT_SERVICE_HOST: payment-service
      PAYMENT_SERVICE_PORT: 8084
      LOYALTY_SERVICE_HOST: loyalty-service
      LOYALTY_SERVICE_PORT: 8085
    depends_on:
      - postgres-db
      - rabbitmq
      - hotel-service
      - payment-service
      - loyalty-service
    ports:
      - "8083:8083"
    networks:
      - backend

  gateway-service:
    image: pupok86/src-gateway-service
    environment:
      SESSION_SERVICE_HOST: session-service
      SESSION_SERVICE_PORT: 8081
      HOTEL_SERVICE_HOST: hotel-service
      HOTEL_SERVICE_PORT: 8082
      BOOKING_SERVICE_HOST: booking-service
      BOOKING_SERVICE_PORT: 8083
      PAYMENT_SERVICE_HOST: payment-service
      PAYMENT_SERVICE_PORT: 8084
      LOYALTY_SERVICE_HOST: loyalty-service
      LOYALTY_SERVICE_PORT: 8085
      REPORT_SERVICE_HOST: report-service
      REPORT_SERVICE_PORT: 8086
    depends_on:
      - session-service
      - hotel-service
      - booking-service
      - payment-service
      - loyalty-service
      - report-service
    ports:
      - "8087:8087"
    networks:
      - backend
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alerts.rules:/etc/prometheus/alerts.rules
    depends_on:
      - session-service
      - hotel-service
      - booking-service
      - payment-service
      - loyalty-service
      - report-service
    ports:
      - "9090:9090"
    networks:
      - backend
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - backend

  loki:
    image: grafana/loki
    ports:
      - "3100:3100"
      - "9095:9095"
    configs:
      - source: loki_config
        target: /etc/loki/loki-config.yaml
    command: -config.file=/etc/loki/loki-config.yaml -target=all 
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    networks:
      - backend


  promtail:
    image: grafana/promtail
    deploy:
      mode: global
    volumes:
      - /var/log:/var/log
    configs:
      - source: promtail_config
        target: /etc/promtail/promtail-config.yaml
    command: -config.file=/etc/promtail/promtail-config.yaml
    networks:
      - backend

  node-exporter:
    image: prom/node-exporter
    deploy:
      mode: global
    ports:
      - "9100:9100"
    networks:
      - backend

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    deploy:
      mode: global
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - backend

  blackbox:
    image: prom/blackbox-exporter
    ports:
      - "9115:9115"
    networks:
      - backend


  alertmanager:
    image: prom/alertmanager:latest
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 1

networks:
  backend:
    driver: overlay
volumes:
    postgres_data:
configs:
  loki_config:
    file: ./loki-config.yaml
  promtail_config:
    file: ./promtail-config.yaml
